// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: error.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "error.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace SC2APIProtocol {

namespace {

const ::google::protobuf::EnumDescriptor* ActionResult_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_error_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_error_2eproto() {
  protobuf_AddDesc_error_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "error.proto");
  GOOGLE_CHECK(file != NULL);
  ActionResult_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_error_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void protobuf_ShutdownFile_error_2eproto() {
}

void protobuf_AddDesc_error_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_error_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013error.proto\022\016SC2APIProtocol*\250-\n\014Action"
    "Result\022\013\n\007Success\020\001\022\020\n\014NotSupported\020\002\022\t\n"
    "\005Error\020\003\022\026\n\022CantQueueThatOrder\020\004\022\t\n\005Retr"
    "y\020\005\022\014\n\010Cooldown\020\006\022\017\n\013QueueIsFull\020\007\022\024\n\020Ra"
    "llyQueueIsFull\020\010\022\025\n\021NotEnoughMinerals\020\t\022"
    "\024\n\020NotEnoughVespene\020\n\022\026\n\022NotEnoughTerraz"
    "ine\020\013\022\023\n\017NotEnoughCustom\020\014\022\021\n\rNotEnoughF"
    "ood\020\r\022\027\n\023FoodUsageImpossible\020\016\022\021\n\rNotEno"
    "ughLife\020\017\022\024\n\020NotEnoughShields\020\020\022\023\n\017NotEn"
    "oughEnergy\020\021\022\022\n\016LifeSuppressed\020\022\022\025\n\021Shie"
    "ldsSuppressed\020\023\022\024\n\020EnergySuppressed\020\024\022\024\n"
    "\020NotEnoughCharges\020\025\022\026\n\022CantAddMoreCharge"
    "s\020\026\022\023\n\017TooMuchMinerals\020\027\022\022\n\016TooMuchVespe"
    "ne\020\030\022\024\n\020TooMuchTerrazine\020\031\022\021\n\rTooMuchCus"
    "tom\020\032\022\017\n\013TooMuchFood\020\033\022\017\n\013TooMuchLife\020\034\022"
    "\022\n\016TooMuchShields\020\035\022\021\n\rTooMuchEnergy\020\036\022\032"
    "\n\026MustTargetUnitWithLife\020\037\022\035\n\031MustTarget"
    "UnitWithShields\020 \022\034\n\030MustTargetUnitWithE"
    "nergy\020!\022\r\n\tCantTrade\020\"\022\r\n\tCantSpend\020#\022\026\n"
    "\022CantTargetThatUnit\020$\022\027\n\023CouldntAllocate"
    "Unit\020%\022\020\n\014UnitCantMove\020&\022\036\n\032TransportIsH"
    "oldingPosition\020\'\022\037\n\033BuildTechRequirement"
    "sNotMet\020(\022\035\n\031CantFindPlacementLocation\020)"
    "\022\023\n\017CantBuildOnThat\020*\022\036\n\032CantBuildTooClo"
    "seToDropOff\020+\022\034\n\030CantBuildLocationInvali"
    "d\020,\022\030\n\024CantSeeBuildLocation\020-\022\"\n\036CantBui"
    "ldTooCloseToCreepSource\020.\022 \n\034CantBuildTo"
    "oCloseToResources\020/\022\034\n\030CantBuildTooFarFr"
    "omWater\0200\022\"\n\036CantBuildTooFarFromCreepSou"
    "rce\0201\022\'\n#CantBuildTooFarFromBuildPowerSo"
    "urce\0202\022\033\n\027CantBuildOnDenseTerrain\0203\022\'\n#C"
    "antTrainTooFarFromTrainPowerSource\0204\022\033\n\027"
    "CantLandLocationInvalid\0205\022\027\n\023CantSeeLand"
    "Location\0206\022!\n\035CantLandTooCloseToCreepSou"
    "rce\0207\022\037\n\033CantLandTooCloseToResources\0208\022\033"
    "\n\027CantLandTooFarFromWater\0209\022!\n\035CantLandT"
    "ooFarFromCreepSource\020:\022&\n\"CantLandTooFar"
    "FromBuildPowerSource\020;\022&\n\"CantLandTooFar"
    "FromTrainPowerSource\020<\022\032\n\026CantLandOnDens"
    "eTerrain\020=\022\033\n\027AddOnTooFarFromBuilding\020>\022"
    "\032\n\026MustBuildRefineryFirst\020\?\022\037\n\033BuildingI"
    "sUnderConstruction\020@\022\023\n\017CantFindDropOff\020"
    "A\022\035\n\031CantLoadOtherPlayersUnits\020B\022\033\n\027NotE"
    "noughRoomToLoadUnit\020C\022\030\n\024CantUnloadUnits"
    "There\020D\022\030\n\024CantWarpInUnitsThere\020E\022\031\n\025Can"
    "tLoadImmobileUnits\020F\022\035\n\031CantRechargeImmo"
    "bileUnits\020G\022&\n\"CantRechargeUnderConstruc"
    "tionUnits\020H\022\024\n\020CantLoadThatUnit\020I\022\023\n\017NoC"
    "argoToUnload\020J\022\031\n\025LoadAllNoTargetsFound\020"
    "K\022\024\n\020NotWhileOccupied\020L\022\031\n\025CantAttackWit"
    "houtAmmo\020M\022\027\n\023CantHoldAnyMoreAmmo\020N\022\032\n\026T"
    "echRequirementsNotMet\020O\022\031\n\025MustLockdownU"
    "nitFirst\020P\022\022\n\016MustTargetUnit\020Q\022\027\n\023MustTa"
    "rgetInventory\020R\022\031\n\025MustTargetVisibleUnit"
    "\020S\022\035\n\031MustTargetVisibleLocation\020T\022\036\n\032Mus"
    "tTargetWalkableLocation\020U\022\032\n\026MustTargetP"
    "awnableUnit\020V\022\032\n\026YouCantControlThatUnit\020"
    "W\022\"\n\036YouCantIssueCommandsToThatUnit\020X\022\027\n"
    "\023MustTargetResources\020Y\022\026\n\022RequiresHealTa"
    "rget\020Z\022\030\n\024RequiresRepairTarget\020[\022\021\n\rNoIt"
    "emsToDrop\020\\\022\030\n\024CantHoldAnyMoreItems\020]\022\020\n"
    "\014CantHoldThat\020^\022\030\n\024TargetHasNoInventory\020"
    "_\022\024\n\020CantDropThisItem\020`\022\024\n\020CantMoveThisI"
    "tem\020a\022\024\n\020CantPawnThisUnit\020b\022\024\n\020MustTarge"
    "tCaster\020c\022\024\n\020CantTargetCaster\020d\022\023\n\017MustT"
    "argetOuter\020e\022\023\n\017CantTargetOuter\020f\022\032\n\026Mus"
    "tTargetYourOwnUnits\020g\022\032\n\026CantTargetYourO"
    "wnUnits\020h\022\033\n\027MustTargetFriendlyUnits\020i\022\033"
    "\n\027CantTargetFriendlyUnits\020j\022\032\n\026MustTarge"
    "tNeutralUnits\020k\022\032\n\026CantTargetNeutralUnit"
    "s\020l\022\030\n\024MustTargetEnemyUnits\020m\022\030\n\024CantTar"
    "getEnemyUnits\020n\022\026\n\022MustTargetAirUnits\020o\022"
    "\026\n\022CantTargetAirUnits\020p\022\031\n\025MustTargetGro"
    "undUnits\020q\022\031\n\025CantTargetGroundUnits\020r\022\030\n"
    "\024MustTargetStructures\020s\022\030\n\024CantTargetStr"
    "uctures\020t\022\030\n\024MustTargetLightUnits\020u\022\030\n\024C"
    "antTargetLightUnits\020v\022\032\n\026MustTargetArmor"
    "edUnits\020w\022\032\n\026CantTargetArmoredUnits\020x\022\035\n"
    "\031MustTargetBiologicalUnits\020y\022\035\n\031CantTarg"
    "etBiologicalUnits\020z\022\031\n\025MustTargetHeroicU"
    "nits\020{\022\031\n\025CantTargetHeroicUnits\020|\022\032\n\026Mus"
    "tTargetRoboticUnits\020}\022\032\n\026CantTargetRobot"
    "icUnits\020~\022\035\n\031MustTargetMechanicalUnits\020\177"
    "\022\036\n\031CantTargetMechanicalUnits\020\200\001\022\033\n\026Must"
    "TargetPsionicUnits\020\201\001\022\033\n\026CantTargetPsion"
    "icUnits\020\202\001\022\033\n\026MustTargetMassiveUnits\020\203\001\022"
    "\033\n\026CantTargetMassiveUnits\020\204\001\022\026\n\021MustTarg"
    "etMissile\020\205\001\022\026\n\021CantTargetMissile\020\206\001\022\032\n\025"
    "MustTargetWorkerUnits\020\207\001\022\032\n\025CantTargetWo"
    "rkerUnits\020\210\001\022!\n\034MustTargetEnergyCapableU"
    "nits\020\211\001\022!\n\034CantTargetEnergyCapableUnits\020"
    "\212\001\022!\n\034MustTargetShieldCapableUnits\020\213\001\022!\n"
    "\034CantTargetShieldCapableUnits\020\214\001\022\025\n\020Must"
    "TargetFlyers\020\215\001\022\025\n\020CantTargetFlyers\020\216\001\022\032"
    "\n\025MustTargetBuriedUnits\020\217\001\022\032\n\025CantTarget"
    "BuriedUnits\020\220\001\022\033\n\026MustTargetCloakedUnits"
    "\020\221\001\022\033\n\026CantTargetCloakedUnits\020\222\001\022\"\n\035Must"
    "TargetUnitsInAStasisField\020\223\001\022\"\n\035CantTarg"
    "etUnitsInAStasisField\020\224\001\022%\n MustTargetUn"
    "derConstructionUnits\020\225\001\022%\n CantTargetUnd"
    "erConstructionUnits\020\226\001\022\030\n\023MustTargetDead"
    "Units\020\227\001\022\030\n\023CantTargetDeadUnits\020\230\001\022\035\n\030Mu"
    "stTargetRevivableUnits\020\231\001\022\035\n\030CantTargetR"
    "evivableUnits\020\232\001\022\032\n\025MustTargetHiddenUnit"
    "s\020\233\001\022\032\n\025CantTargetHiddenUnits\020\234\001\022\"\n\035Cant"
    "RechargeOtherPlayersUnits\020\235\001\022\035\n\030MustTarg"
    "etHallucinations\020\236\001\022\035\n\030CantTargetHalluci"
    "nations\020\237\001\022 \n\033MustTargetInvulnerableUnit"
    "s\020\240\001\022 \n\033CantTargetInvulnerableUnits\020\241\001\022\034"
    "\n\027MustTargetDetectedUnits\020\242\001\022\034\n\027CantTarg"
    "etDetectedUnits\020\243\001\022\035\n\030CantTargetUnitWith"
    "Energy\020\244\001\022\036\n\031CantTargetUnitWithShields\020\245"
    "\001\022!\n\034MustTargetUncommandableUnits\020\246\001\022!\n\034"
    "CantTargetUncommandableUnits\020\247\001\022!\n\034MustT"
    "argetPreventDefeatUnits\020\250\001\022!\n\034CantTarget"
    "PreventDefeatUnits\020\251\001\022!\n\034MustTargetPreve"
    "ntRevealUnits\020\252\001\022!\n\034CantTargetPreventRev"
    "ealUnits\020\253\001\022\033\n\026MustTargetPassiveUnits\020\254\001"
    "\022\033\n\026CantTargetPassiveUnits\020\255\001\022\033\n\026MustTar"
    "getStunnedUnits\020\256\001\022\033\n\026CantTargetStunnedU"
    "nits\020\257\001\022\034\n\027MustTargetSummonedUnits\020\260\001\022\034\n"
    "\027CantTargetSummonedUnits\020\261\001\022\024\n\017MustTarge"
    "tUser1\020\262\001\022\024\n\017CantTargetUser1\020\263\001\022\037\n\032MustT"
    "argetUnstoppableUnits\020\264\001\022\037\n\032CantTargetUn"
    "stoppableUnits\020\265\001\022\035\n\030MustTargetResistant"
    "Units\020\266\001\022\035\n\030CantTargetResistantUnits\020\267\001\022"
    "\031\n\024MustTargetDazedUnits\020\270\001\022\031\n\024CantTarget"
    "DazedUnits\020\271\001\022\021\n\014CantLockdown\020\272\001\022\024\n\017Cant"
    "MindControl\020\273\001\022\034\n\027MustTargetDestructible"
    "s\020\274\001\022\034\n\027CantTargetDestructibles\020\275\001\022\024\n\017Mu"
    "stTargetItems\020\276\001\022\024\n\017CantTargetItems\020\277\001\022\030"
    "\n\023NoCalldownAvailable\020\300\001\022\025\n\020WaypointList"
    "Full\020\301\001\022\023\n\016MustTargetRace\020\302\001\022\023\n\016CantTarg"
    "etRace\020\303\001\022\033\n\026MustTargetSimilarUnits\020\304\001\022\033"
    "\n\026CantTargetSimilarUnits\020\305\001\022\032\n\025CantFindE"
    "noughTargets\020\306\001\022\031\n\024AlreadySpawningLarva\020"
    "\307\001\022!\n\034CantTargetExhaustedResources\020\310\001\022\023\n"
    "\016CantUseMinimap\020\311\001\022\025\n\020CantUseInfoPanel\020\312"
    "\001\022\025\n\020OrderQueueIsFull\020\313\001\022\034\n\027CantHarvestT"
    "hatResource\020\314\001\022\032\n\025HarvestersNotRequired\020"
    "\315\001\022\024\n\017AlreadyTargeted\020\316\001\022\036\n\031CantAttackWe"
    "aponsDisabled\020\317\001\022\027\n\022CouldntReachTarget\020\320"
    "\001\022\027\n\022TargetIsOutOfRange\020\321\001\022\025\n\020TargetIsTo"
    "oClose\020\322\001\022\025\n\020TargetIsOutOfArc\020\323\001\022\035\n\030Cant"
    "FindTeleportLocation\020\324\001\022\025\n\020InvalidItemCl"
    "ass\020\325\001\022\030\n\023CantFindCancelOrder\020\326\001", 5832);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "error.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_error_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_error_2eproto {
  StaticDescriptorInitializer_error_2eproto() {
    protobuf_AddDesc_error_2eproto();
  }
} static_descriptor_initializer_error_2eproto_;
const ::google::protobuf::EnumDescriptor* ActionResult_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActionResult_descriptor_;
}
bool ActionResult_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 91:
    case 92:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 123:
    case 124:
    case 125:
    case 126:
    case 127:
    case 128:
    case 129:
    case 130:
    case 131:
    case 132:
    case 133:
    case 134:
    case 135:
    case 136:
    case 137:
    case 138:
    case 139:
    case 140:
    case 141:
    case 142:
    case 143:
    case 144:
    case 145:
    case 146:
    case 147:
    case 148:
    case 149:
    case 150:
    case 151:
    case 152:
    case 153:
    case 154:
    case 155:
    case 156:
    case 157:
    case 158:
    case 159:
    case 160:
    case 161:
    case 162:
    case 163:
    case 164:
    case 165:
    case 166:
    case 167:
    case 168:
    case 169:
    case 170:
    case 171:
    case 172:
    case 173:
    case 174:
    case 175:
    case 176:
    case 177:
    case 178:
    case 179:
    case 180:
    case 181:
    case 182:
    case 183:
    case 184:
    case 185:
    case 186:
    case 187:
    case 188:
    case 189:
    case 190:
    case 191:
    case 192:
    case 193:
    case 194:
    case 195:
    case 196:
    case 197:
    case 198:
    case 199:
    case 200:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 206:
    case 207:
    case 208:
    case 209:
    case 210:
    case 211:
    case 212:
    case 213:
    case 214:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace SC2APIProtocol

// @@protoc_insertion_point(global_scope)
