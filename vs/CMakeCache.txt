# This is the CMakeCache file.
# For build in directory: d:/Dev/s2client-api/build
# It was generated by CMake: C:/Program Files/CMake/bin/cmake.exe
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Use 3Dnow! MMX assembly routines
3DNOW:BOOL=ON

//Support the ALSA audio API
ALSA:BOOL=OFF

//Use Altivec assembly routines
ALTIVEC:BOOL=ON

//Support the Analog Real Time Synthesizer
ARTS:BOOL=OFF

//Enable assembly routines
ASSEMBLY:BOOL=ON

//Enable internal sanity checks (auto/disabled/release/enabled/paranoid)
ASSERTIONS:STRING=auto

//Build Examples
BUILD_API_EXAMPLES:BOOL=ON

//Build Tests
BUILD_API_TESTS:BOOL=ON

//Build the testing tree.
BUILD_TESTING:BOOL=OFF

//Do not stop build if there are warnings
CIVETWEB_ALLOW_WARNINGS:BOOL=ON

//The C++ standard to use; auto determines the latest supported
// by the compiler
CIVETWEB_CXX_STANDARD:STRING=auto

//The C standard to use; auto determines the latest supported by
// the compiler
CIVETWEB_C_STANDARD:STRING=auto

//Disables caching, so that no timegm is used.
CIVETWEB_DISABLE_CACHING:BOOL=OFF

//Disables CGI, so theserver will not execute CGI scripts
CIVETWEB_DISABLE_CGI:BOOL=OFF

//Enable ASAN in debug mode
CIVETWEB_ENABLE_ASAN:BOOL=OFF

//Enables the C++ wrapper library
CIVETWEB_ENABLE_CXX:BOOL=OFF

//Enable Duktape CGIs
CIVETWEB_ENABLE_DUKTAPE:BOOL=OFF

//Enables the IP version 6 support
CIVETWEB_ENABLE_IPV6:BOOL=OFF

//Enable Lua CGIs
CIVETWEB_ENABLE_LUA:BOOL=OFF

//Enable the memory debugging features
CIVETWEB_ENABLE_MEMORY_DEBUGGING:BOOL=OFF

//Enables the secure socket layer
CIVETWEB_ENABLE_SSL:BOOL=ON

//Dynamically loads the SSL library rather than linking it
CIVETWEB_ENABLE_SSL_DYNAMIC_LOADING:BOOL=ON

//Shows the output of third party dependency processing
CIVETWEB_ENABLE_THIRD_PARTY_OUTPUT:BOOL=OFF

//Enable websockets connections
CIVETWEB_ENABLE_WEBSOCKETS:BOOL=ON

//The largest amount of content bytes allowed in a request
CIVETWEB_MAX_REQUEST_SIZE:STRING=16384

//Configures the server to serve no static files
CIVETWEB_SERVE_NO_FILES:BOOL=OFF

//The location that third party code is downloaded, built and installed
CIVETWEB_THIRD_PARTY_DIR:STRING=D:/Dev/s2client-api/build/third_party

//The stack size in bytes for each thread created
CIVETWEB_THREAD_STACK_SIZE:STRING=102400

//The version of the civetweb library
CIVETWEB_VERSION:STRING=1.9.1

//Use clock_gettime() instead of gettimeofday()
CLOCK_GETTIME:BOOL=OFF

//Choose the type of build, options are: None Debug Release RelWithDebInfo
// MinSizeRel Coverage.
CMAKE_BUILD_TYPE:STRING=

//Semicolon separated list of supported configuration types, only
// supports Debug, Release, MinSizeRel, and RelWithDebInfo, anything
// else will be ignored.
CMAKE_CONFIGURATION_TYPES:STRING=Debug;Release;MinSizeRel;RelWithDebInfo

//Flags used by the compiler during all build types.
CMAKE_CXX_FLAGS:STRING=/DWIN32 /D_WINDOWS /W3 /GR /EHsc

CMAKE_CXX_FLAGS_DEBUG:STRING=/MTd /ZI /Od

//Flags used by the compiler during release builds for minimum
// size.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=/MD /O1 /Ob1 /DNDEBUG

CMAKE_CXX_FLAGS_RELEASE:STRING=/MT

//Flags used by the compiler during release builds with debug info.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=/MD /Zi /O2 /Ob1 /DNDEBUG

//Libraries linked by default with all C++ applications.
CMAKE_CXX_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//Flags used by the compiler during all build types.
CMAKE_C_FLAGS:STRING=/DWIN32 /D_WINDOWS /W3

//Flags used by the C compiler during coverage builds.
CMAKE_C_FLAGS_COVERAGE:STRING=/MDd /Zi /Ob0 /Od /RTC1

//Flags used by the compiler during debug builds.
CMAKE_C_FLAGS_DEBUG:STRING=/MDd /Zi /Ob0 /Od /RTC1

//Flags used by the compiler during release builds for minimum
// size.
CMAKE_C_FLAGS_MINSIZEREL:STRING=/MD /O1 /Ob1 /DNDEBUG

//Flags used by the compiler during release builds.
CMAKE_C_FLAGS_RELEASE:STRING=/MD /O2 /Ob2 /DNDEBUG

//Flags used by the compiler during release builds with debug info.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=/MD /Zi /O2 /Ob1 /DNDEBUG

//Libraries linked by default with all C applications.
CMAKE_C_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//Flags used by the linker.
CMAKE_EXE_LINKER_FLAGS:STRING=/machine:x64

//Flags used for linking binaries during coverage builds.
CMAKE_EXE_LINKER_FLAGS_COVERAGE:STRING=/debug /INCREMENTAL

//Flags used by the linker during debug builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during release minsize builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during release builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during Release with Debug Info builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//User executables (bin)
CMAKE_INSTALL_BINDIR:PATH=bin

//Directory relative to CMAKE_INSTALL to install the cmake configuration
// files
CMAKE_INSTALL_CMAKEDIR:STRING=cmake

//Read-only architecture-independent data (DATAROOTDIR)
CMAKE_INSTALL_DATADIR:PATH=

//Read-only architecture-independent data root (share)
CMAKE_INSTALL_DATAROOTDIR:PATH=share

//Documentation root (DATAROOTDIR/doc/PROJECT_NAME)
CMAKE_INSTALL_DOCDIR:PATH=

//C header files (include)
CMAKE_INSTALL_INCLUDEDIR:PATH=include

//Info documentation (DATAROOTDIR/info)
CMAKE_INSTALL_INFODIR:PATH=

//Object code libraries (lib)
CMAKE_INSTALL_LIBDIR:PATH=lib

//Program executables (libexec)
CMAKE_INSTALL_LIBEXECDIR:PATH=libexec

//Locale-dependent data (DATAROOTDIR/locale)
CMAKE_INSTALL_LOCALEDIR:PATH=

//Modifiable single-machine data (var)
CMAKE_INSTALL_LOCALSTATEDIR:PATH=var

//Man documentation (DATAROOTDIR/man)
CMAKE_INSTALL_MANDIR:PATH=

//C header files for non-gcc (/usr/include)
CMAKE_INSTALL_OLDINCLUDEDIR:PATH=/usr/include

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=C:/Program Files/s2client-api

//Run-time variable data (LOCALSTATEDIR/run)
CMAKE_INSTALL_RUNSTATEDIR:PATH=

//System admin executables (sbin)
CMAKE_INSTALL_SBINDIR:PATH=sbin

//Modifiable architecture-independent data (com)
CMAKE_INSTALL_SHAREDSTATEDIR:PATH=com

//Read-only single-machine data (etc)
CMAKE_INSTALL_SYSCONFDIR:PATH=etc

//Path to a program.
CMAKE_LINKER:FILEPATH=D:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.10.25017/bin/HostX86/x64/link.exe

//Flags used by the linker during the creation of modules.
CMAKE_MODULE_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during debug builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during release minsize builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during release builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during Release with Debug Info builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=s2client-api

//RC compiler
CMAKE_RC_COMPILER:FILEPATH=rc

//Flags for Windows Resource Compiler.
CMAKE_RC_FLAGS:STRING=/DWIN32

//Flags for Windows Resource Compiler during debug builds.
CMAKE_RC_FLAGS_DEBUG:STRING=/D_DEBUG

//Flags for Windows Resource Compiler during release builds for
// minimum size.
CMAKE_RC_FLAGS_MINSIZEREL:STRING=

//Flags for Windows Resource Compiler during release builds.
CMAKE_RC_FLAGS_RELEASE:STRING=

//Flags for Windows Resource Compiler during release builds with
// debug info.
CMAKE_RC_FLAGS_RELWITHDEBINFO:STRING=

//Flags used by the linker during the creation of dll's.
CMAKE_SHARED_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the shared libraries linker during coverage builds.
CMAKE_SHARED_LINKER_FLAGS_COVERAGE:STRING=/debug /INCREMENTAL

//Flags used by the linker during debug builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during release minsize builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during release builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during Release with Debug Info builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries.
CMAKE_STATIC_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during debug builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Enable to build 7-Zip packages
CPACK_BINARY_7Z:BOOL=OFF

//Enable to build IFW packages
CPACK_BINARY_IFW:BOOL=OFF

//Enable to build NSIS packages
CPACK_BINARY_NSIS:BOOL=ON

//Enable to build WiX packages
CPACK_BINARY_WIX:BOOL=OFF

//Enable to build ZIP packages
CPACK_BINARY_ZIP:BOOL=OFF

//Enable to build 7-Zip source packages
CPACK_SOURCE_7Z:BOOL=ON

//Enable to build ZIP source packages
CPACK_SOURCE_ZIP:BOOL=ON

//Use DirectX for Windows audio/video
DIRECTX:BOOL=ON

//Support the disk writer audio driver
DISKAUDIO:BOOL=ON

//Support the dummy audio driver
DUMMYAUDIO:BOOL=ON

//Support the Enlightened Sound Daemon
ESD:BOOL=OFF

//Force /MT for static VC runtimes
FORCE_STATIC_VCRT:BOOL=OFF

//Use FusionSound audio driver
FUSIONSOUND:BOOL=OFF

//Use gcc builtin atomics
GCC_ATOMICS:BOOL=OFF

//Use the Touchscreen library for input
INPUT_TSLIB:BOOL=OFF

//Use the system C library
LIBC:BOOL=OFF

//Path to a file.
LIBDL_INCLUDE_DIRS:PATH=LIBDL_INCLUDE_DIRS-NOTFOUND

//Path to a library.
LIBDL_LIBRARIES:FILEPATH=LIBDL_LIBRARIES-NOTFOUND

//Path to a file.
LIBRT_INCLUDE_DIRS:PATH=LIBRT_INCLUDE_DIRS-NOTFOUND

//Path to a library.
LIBRT_LIBRARIES:FILEPATH=LIBRT_LIBRARIES-NOTFOUND

//Use libsamplerate for audio rate conversion
LIBSAMPLERATE:BOOL=OFF

//Use MMX assembly routines
MMX:BOOL=ON

//Path to a file.
MSVC_REDIST_DIR:PATH=D:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Redist/MSVC/14.10.25008

//Support the NAS audio API
NAS:BOOL=OFF

//Dynamically load NAS audio API
NAS_SHARED:BOOL=OFF

//Support the OSS audio API
OSS:BOOL=OFF

//pkg-config executable
PKG_CONFIG_EXECUTABLE:FILEPATH=PKG_CONFIG_EXECUTABLE-NOTFOUND

//Use POSIX threads for multi-threading
PTHREADS:BOOL=OFF

//Use PulseAudio
PULSEAUDIO:BOOL=OFF

//Enable the Direct3D render driver
RENDER_D3D:BOOL=ON

//Use an rpath when linking SDL
RPATH:BOOL=OFF

//Dependencies for the target
SDL2-static_LIB_DEPENDS:STATIC=general;user32;general;gdi32;general;winmm;general;imm32;general;ole32;general;oleaut32;general;version;general;uuid;general;dinput8;

//Value Computed by CMake
SDL2_BINARY_DIR:STATIC=D:/Dev/s2client-api/build/contrib/SDL-mirror

//Value Computed by CMake
SDL2_SOURCE_DIR:STATIC=D:/Dev/s2client-api/contrib/SDL-mirror

//Dependencies for target
SDL2main_LIB_DEPENDS:STATIC=

//Enable the Atomic subsystem
SDL_ATOMIC:BOOL=ON

//Enable the Audio subsystem
SDL_AUDIO:BOOL=ON

//Enable the CPUinfo subsystem
SDL_CPUINFO:BOOL=ON

//Use dlopen for shared object loading
SDL_DLOPEN:BOOL=ON

//Enable the Events subsystem
SDL_EVENTS:BOOL=ON

//Enable the File subsystem
SDL_FILE:BOOL=ON

//Enable the Filesystem subsystem
SDL_FILESYSTEM:BOOL=ON

//Enable the Haptic subsystem
SDL_HAPTIC:BOOL=ON

//Enable the Joystick subsystem
SDL_JOYSTICK:BOOL=ON

//Enable the Loadso subsystem
SDL_LOADSO:BOOL=ON

//Enable the Power subsystem
SDL_POWER:BOOL=ON

//Enable the Render subsystem
SDL_RENDER:BOOL=ON

SDL_SHARED:BOOL=OFF

//Build a static version of the library
SDL_STATIC:BOOL=ON

//Static version of the library should be built with Position Independent
// Code
SDL_STATIC_PIC:BOOL=OFF

//Enable the Threads subsystem
SDL_THREADS:BOOL=ON

//Enable the Timers subsystem
SDL_TIMERS:BOOL=ON

//Enable the Video subsystem
SDL_VIDEO:BOOL=ON

//Support the sndio audio API
SNDIO:BOOL=OFF

//Use SSE assembly routines
SSE:BOOL=ON

//Use SSE2 assembly routines
SSE2:BOOL=ON

//Use SSE3 assembly routines
SSE3:BOOL=ON

//Allow GCC to use SSE floating point math
SSEMATH:BOOL=ON

//Use Cocoa video driver
VIDEO_COCOA:BOOL=OFF

//Use DirectFB video driver
VIDEO_DIRECTFB:BOOL=OFF

//Use dummy video driver
VIDEO_DUMMY:BOOL=ON

//Use Mir video driver
VIDEO_MIR:BOOL=OFF

//Include OpenGL support
VIDEO_OPENGL:BOOL=ON

//Include OpenGL ES support
VIDEO_OPENGLES:BOOL=ON

//Use Raspberry Pi video driver
VIDEO_RPI:BOOL=OFF

//Use Vivante EGL video driver
VIDEO_VIVANTE:BOOL=OFF

//Use Wayland video driver
VIDEO_WAYLAND:BOOL=OFF

//Use X11 video driver
VIDEO_X11:BOOL=OFF

//Path to a program.
WINDRES:FILEPATH=WINDRES-NOTFOUND

//Path to a file.
WINSOCK_INCLUDE_DIRS:PATH=WINSOCK_INCLUDE_DIRS-NOTFOUND

//Path to a library.
WINSOCK_LIBRARIES:FILEPATH=WINSOCK_LIBRARIES-NOTFOUND

//Dependencies for target
c-library_LIB_DEPENDS:STATIC=

//Value Computed by CMake
civetweb_BINARY_DIR:STATIC=D:/Dev/s2client-api/build/contrib/civetweb

//Value Computed by CMake
civetweb_SOURCE_DIR:STATIC=D:/Dev/s2client-api/contrib/civetweb

//Dependencies for target
libprotobuf-lite_LIB_DEPENDS:STATIC=

//Dependencies for target
libprotobuf_LIB_DEPENDS:STATIC=

//Dependencies for the target
libprotoc_LIB_DEPENDS:STATIC=general;libprotobuf;

//Value Computed by CMake
protobuf_BINARY_DIR:STATIC=D:/Dev/s2client-api/build/contrib/protobuf/cmake

//Build examples
protobuf_BUILD_EXAMPLES:BOOL=OFF

//Build Shared Libraries
protobuf_BUILD_SHARED_LIBS:BOOL=OFF

//Build tests
protobuf_BUILD_TESTS:BOOL=OFF

//Default debug postfix
protobuf_DEBUG_POSTFIX:STRING=d

//Install the examples folder
protobuf_INSTALL_EXAMPLES:BOOL=OFF

//CMake build-in FindProtobuf.cmake module compatible
protobuf_MODULE_COMPATIBLE:BOOL=OFF

//Link static runtime libraries
protobuf_MSVC_STATIC_RUNTIME:BOOL=ON

//Value Computed by CMake
protobuf_SOURCE_DIR:STATIC=D:/Dev/s2client-api/contrib/protobuf/cmake

//Enable for verbose output
protobuf_VERBOSE:BOOL=OFF

//Build with zlib support
protobuf_WITH_ZLIB:BOOL=OFF

//Value Computed by CMake
s2client-api_BINARY_DIR:STATIC=D:/Dev/s2client-api/build

//Value Computed by CMake
s2client-api_SOURCE_DIR:STATIC=D:/Dev/s2client-api

//Dependencies for the target
sc2api_LIB_DEPENDS:STATIC=general;sc2protocol;general;c-library;

//Dependencies for the target
sc2lib_LIB_DEPENDS:STATIC=general;sc2api;

//Dependencies for the target
sc2protocol_LIB_DEPENDS:STATIC=general;libprotobuf;

//Dependencies for the target
sc2renderer_LIB_DEPENDS:STATIC=general;SDL2-static;

//Dependencies for target
sc2utils_LIB_DEPENDS:STATIC=


########################
# INTERNAL cache entries
########################

//STRINGS property for variable: CIVETWEB_CXX_STANDARD
CIVETWEB_CXX_STANDARD-STRINGS:INTERNAL=auto;c++14;c++11;c++98
//STRINGS property for variable: CIVETWEB_C_STANDARD
CIVETWEB_C_STANDARD-STRINGS:INTERNAL=auto;c11;c99;c89
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=d:/Dev/s2client-api/build
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=9
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=1
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=C:/Program Files/CMake/bin/cmake.exe
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=C:/Program Files/CMake/bin/cpack.exe
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=C:/Program Files/CMake/bin/ctest.exe
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_STANDARD_LIBRARIES
CMAKE_CXX_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_COVERAGE
CMAKE_C_FLAGS_COVERAGE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_STANDARD_LIBRARIES
CMAKE_C_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=Unknown
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_COVERAGE
CMAKE_EXE_LINKER_FLAGS_COVERAGE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Visual Studio 15 2017 Win64
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Have include pthread.h
CMAKE_HAVE_PTHREAD_H:INTERNAL=
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=D:/Dev/s2client-api
//ADVANCED property for variable: CMAKE_INSTALL_BINDIR
CMAKE_INSTALL_BINDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_CMAKEDIR
CMAKE_INSTALL_CMAKEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DATADIR
CMAKE_INSTALL_DATADIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DATAROOTDIR
CMAKE_INSTALL_DATAROOTDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DOCDIR
CMAKE_INSTALL_DOCDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_INCLUDEDIR
CMAKE_INSTALL_INCLUDEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_INFODIR
CMAKE_INSTALL_INFODIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LIBDIR
CMAKE_INSTALL_LIBDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LIBEXECDIR
CMAKE_INSTALL_LIBEXECDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LOCALEDIR
CMAKE_INSTALL_LOCALEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LOCALSTATEDIR
CMAKE_INSTALL_LOCALSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_MANDIR
CMAKE_INSTALL_MANDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_OLDINCLUDEDIR
CMAKE_INSTALL_OLDINCLUDEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_RUNSTATEDIR
CMAKE_INSTALL_RUNSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SBINDIR
CMAKE_INSTALL_SBINDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SHAREDSTATEDIR
CMAKE_INSTALL_SHAREDSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SYSCONFDIR
CMAKE_INSTALL_SYSCONFDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=8
//Platform information initialized
CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_COMPILER
CMAKE_RC_COMPILER-ADVANCED:INTERNAL=1
CMAKE_RC_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS
CMAKE_RC_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_DEBUG
CMAKE_RC_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_MINSIZEREL
CMAKE_RC_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_RELEASE
CMAKE_RC_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_RELWITHDEBINFO
CMAKE_RC_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=C:/Program Files/CMake/share/cmake-3.9
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_COVERAGE
CMAKE_SHARED_LINKER_FLAGS_COVERAGE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_7Z
CPACK_BINARY_7Z-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_IFW
CPACK_BINARY_IFW-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_NSIS
CPACK_BINARY_NSIS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_WIX
CPACK_BINARY_WIX-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_ZIP
CPACK_BINARY_ZIP-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_SOURCE_7Z
CPACK_SOURCE_7Z-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_SOURCE_ZIP
CPACK_SOURCE_ZIP-ADVANCED:INTERNAL=1
//Details about finding Threads
FIND_PACKAGE_MESSAGE_DETAILS_Threads:INTERNAL=[TRUE][v()]
//Test HAVE_C_FLAG_COVERAGE
HAVE_C_FLAG_COVERAGE:INTERNAL=
//Test HAVE_C_FLAG_FLTO
HAVE_C_FLAG_FLTO:INTERNAL=
//Test HAVE_C_FLAG_FSTACK_PROTECTOR_ALL
HAVE_C_FLAG_FSTACK_PROTECTOR_ALL:INTERNAL=
//Test HAVE_C_FLAG_FSTACK_PROTECTOR_STRONG
HAVE_C_FLAG_FSTACK_PROTECTOR_STRONG:INTERNAL=
//Test HAVE_C_FLAG_FVISIBILITY_HIDDEN
HAVE_C_FLAG_FVISIBILITY_HIDDEN:INTERNAL=
//Test HAVE_C_FLAG_PEDANTIC_ERRORS
HAVE_C_FLAG_PEDANTIC_ERRORS:INTERNAL=
//Test HAVE_C_FLAG_STD_C11
HAVE_C_FLAG_STD_C11:INTERNAL=
//Test HAVE_C_FLAG_STD_C89
HAVE_C_FLAG_STD_C89:INTERNAL=
//Test HAVE_C_FLAG_STD_C99
HAVE_C_FLAG_STD_C99:INTERNAL=
//Test HAVE_C_FLAG_W4
HAVE_C_FLAG_W4:INTERNAL=1
//Test HAVE_C_FLAG_WALL
HAVE_C_FLAG_WALL:INTERNAL=1
//Test HAVE_C_FLAG_WCONVERSION
HAVE_C_FLAG_WCONVERSION:INTERNAL=
//Test HAVE_C_FLAG_WD4820
HAVE_C_FLAG_WD4820:INTERNAL=
//Test HAVE_C_FLAG_WEVERYTHING
HAVE_C_FLAG_WEVERYTHING:INTERNAL=
//Test HAVE_C_FLAG_WEXTRA
HAVE_C_FLAG_WEXTRA:INTERNAL=
//Test HAVE_C_FLAG_WMISSING_PROTOTYPES
HAVE_C_FLAG_WMISSING_PROTOTYPES:INTERNAL=
//Test HAVE_C_FLAG_WNO_FORMAT_NONLITERAL
HAVE_C_FLAG_WNO_FORMAT_NONLITERAL:INTERNAL=
//Test HAVE_C_FLAG_WNO_PADDED
HAVE_C_FLAG_WNO_PADDED:INTERNAL=
//Test HAVE_C_FLAG_WNO_UNUSED_MACROS
HAVE_C_FLAG_WNO_UNUSED_MACROS:INTERNAL=
//Test HAVE_C_FLAG_WPARENTHESES
HAVE_C_FLAG_WPARENTHESES:INTERNAL=
//Test HAVE_C_FLAG_WSHADOW
HAVE_C_FLAG_WSHADOW:INTERNAL=
//Test HAVE_C_FLAG_WX
HAVE_C_FLAG_WX:INTERNAL=1
//Have include d3d11_1.h
HAVE_D3D11_H:INTERNAL=1
//Have include d3d9.h
HAVE_D3D_H:INTERNAL=1
//Have include ddraw.h
HAVE_DDRAW_H:INTERNAL=1
//Have include dinput.h
HAVE_DINPUT_H:INTERNAL=1
//Have include dsound.h
HAVE_DSOUND_H:INTERNAL=1
//Have include dxgi.h
HAVE_DXGI_H:INTERNAL=1
//Test HAVE_WIN32_CC
HAVE_WIN32_CC:INTERNAL=1
//Have include xaudio2.h
HAVE_XAUDIO2_H:INTERNAL=
//Test HAVE_XINPUT_H
HAVE_XINPUT_H:INTERNAL=1
//ADVANCED property for variable: LIBDL_INCLUDE_DIRS
LIBDL_INCLUDE_DIRS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LIBDL_LIBRARIES
LIBDL_LIBRARIES-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LIBRT_INCLUDE_DIRS
LIBRT_INCLUDE_DIRS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LIBRT_LIBRARIES
LIBRT_LIBRARIES-ADVANCED:INTERNAL=1
//ADVANCED property for variable: MSVC_REDIST_DIR
MSVC_REDIST_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: PKG_CONFIG_EXECUTABLE
PKG_CONFIG_EXECUTABLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WINSOCK_INCLUDE_DIRS
WINSOCK_INCLUDE_DIRS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WINSOCK_LIBRARIES
WINSOCK_LIBRARIES-ADVANCED:INTERNAL=1
//CMAKE_INSTALL_PREFIX during last run
_GNUInstallDirs_LAST_CMAKE_INSTALL_PREFIX:INTERNAL=C:/Program Files/s2client-api
//ADVANCED property for variable: protobuf_DEBUG_POSTFIX
protobuf_DEBUG_POSTFIX-ADVANCED:INTERNAL=1
//ADVANCED property for variable: protobuf_MODULE_COMPATIBLE
protobuf_MODULE_COMPATIBLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: protobuf_VERBOSE
protobuf_VERBOSE-ADVANCED:INTERNAL=1

